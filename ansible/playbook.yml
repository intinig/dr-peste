---
- name: Deploy Dr. Peste Discord Bot
  hosts: dr_peste
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - git
          - wget
          - logrotate
        state: present

    - name: Download Go
      get_url:
        url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        checksum: "sha256:{{ go_checksum }}"

    - name: Extract Go
      unarchive:
        src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: yes
        creates: /usr/local/go

    - name: Set Go environment variables
      lineinfile:
        path: /etc/profile.d/go.sh
        line: "{{ item }}"
        create: yes
        mode: '0644'
      with_items:
        - 'export PATH=$PATH:/usr/local/go/bin'
        - 'export GOPATH=/usr/local/go'

    - name: Create bot user
      user:
        name: "{{ bot_user }}"
        shell: /bin/bash
        create_home: yes
        system: yes

    - name: Create log directory
      file:
        path: "{{ log_directory }}"
        state: directory
        owner: "{{ bot_user }}"
        group: "{{ bot_user }}"
        mode: '0755'

    - name: Create log files
      file:
        path: "{{ item }}"
        state: touch
        owner: "{{ bot_user }}"
        group: "{{ bot_user }}"
        mode: '0640'
      with_items:
        - "{{ log_directory }}/bot.log"
        - "{{ log_directory }}/error.log"

    - name: Clone/update repository
      git:
        repo: "{{ bot_repo }}"
        dest: "{{ bot_home }}/dr-peste"
        force: yes
      become: yes
      become_user: "{{ bot_user }}"

    # Fix permissions after clone
    - name: Ensure correct ownership of bot directory
      file:
        path: "{{ bot_home }}/dr-peste"
        state: directory
        owner: "{{ bot_user }}"
        group: "{{ bot_user }}"
        recurse: yes

    - name: Create systemd service
      template:
        src: templates/dr-peste.service.j2
        dest: /etc/systemd/system/dr-peste.service
        mode: '0644'
      notify: restart dr-peste

    - name: Configure logrotate
      template:
        src: templates/dr-peste.logrotate.j2
        dest: /etc/logrotate.d/dr-peste
        mode: '0644'

    - name: Enable and start dr-peste service
      systemd:
        name: dr-peste
        enabled: yes
        state: started
        daemon_reload: yes

  handlers:
    - name: restart dr-peste
      systemd:
        name: dr-peste
        state: restarted 